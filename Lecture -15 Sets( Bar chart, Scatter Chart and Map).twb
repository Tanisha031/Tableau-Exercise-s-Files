<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.1pw5tkg0cvift61b45v6z0yys0m6' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.1ybrh3p1vyxp0a11wzud20zcf2s3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='E:/Desktop/MEDICAL IMAGING FLIES/ALL COURSES/Tableau/Excel DATASETS/Tableau repositary/Datasources/2025.1/en_US-US/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1ybrh3p1vyxp0a11wzud20zcf2s3' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D]' role='measure' type='quantitative' />
      <column-instance column='[State/Province Set]' derivation='InOut' name='[io:State/Province Set:nk]' pivot='key' type='nominal' />
      <group caption='Map Set' name='[State/Province Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[State/Province]' member='&quot;Arizona&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Delaware&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Georgia&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Illinois&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Indiana&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Kentucky&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Michigan&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Nebraska&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;New Mexico&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Ohio&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Oklahoma&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Texas&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Utah&quot;' />
          <groupfilter function='member' level='[State/Province]' member='&quot;Wisconsin&quot;' />
        </groupfilter>
      </group>
      <group caption='Scatter Set ' name='[Sub-Category Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Binders&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Chairs&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Machines&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Storage&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
        </groupfilter>
      </group>
      <group caption='Bar Set 2' name='[Sub-Category Set 3]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Scatter Random Set' name='[Sub-Category Set 4]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Art&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Fasteners&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Furnishings&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Storage&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Tables&quot;' />
        </groupfilter>
      </group>
      <group caption=' Bar Set 1' name='[Sub-Category Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Art&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Envelopes&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Fasteners&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Furnishings&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Labels&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Paper&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Supplies&quot;' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:State/Province Set:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_8A8E0F90CE3B48D39A5FF4B13B2D516D'>
            <properties context=''>
              <relation connection='excel-direct.1ybrh3p1vyxp0a11wzud20zcf2s3' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Bar Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pw5tkg0cvift61b45v6z0yys0m6' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw5tkg0cvift61b45v6z0yys0m6'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set]' derivation='InOut' name='[io:Sub-Category Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[sum:Sales:qk]</rows>
        <cols>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{4219209F-88D9-4479-85C6-E38AC470222F}' />
    </worksheet>
    <worksheet name='Bar Charts (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pw5tkg0cvift61b45v6z0yys0m6' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw5tkg0cvift61b45v6z0yys0m6'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set 3]' derivation='InOut' name='[io:Sub-Category Set 3:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Chairs&quot;</bucket>
              <bucket>&quot;Phones&quot;</bucket>
              <bucket>&quot;Storage&quot;</bucket>
              <bucket>&quot;Tables&quot;</bucket>
              <bucket>&quot;Binders&quot;</bucket>
              <bucket>&quot;Machines&quot;</bucket>
              <bucket>&quot;Accessories&quot;</bucket>
              <bucket>&quot;Copiers&quot;</bucket>
              <bucket>&quot;Bookcases&quot;</bucket>
              <bucket>&quot;Appliances&quot;</bucket>
              <bucket>&quot;Furnishings&quot;</bucket>
              <bucket>&quot;Paper&quot;</bucket>
              <bucket>&quot;Supplies&quot;</bucket>
              <bucket>&quot;Art&quot;</bucket>
              <bucket>&quot;Envelopes&quot;</bucket>
              <bucket>&quot;Labels&quot;</bucket>
              <bucket>&quot;Fasteners&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 3:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[sum:Sales:qk]</rows>
        <cols>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{80EE260D-7986-4F71-A042-10BD7D30265B}' />
    </worksheet>
    <worksheet name='Maps'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pw5tkg0cvift61b45v6z0yys0m6' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1pw5tkg0cvift61b45v6z0yys0m6'>
            <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State/Province Set]' derivation='InOut' name='[io:State/Province Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[State/Province]' derivation='None' name='[none:State/Province:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:State/Province Set:nk]' />
              <text column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:State/Province Set:nk]' />
              <lod column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:State/Province:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[Latitude (generated)]</rows>
        <cols>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1B08C13A-AAB3-4EEF-9C7E-48BD8535AF25}' />
    </worksheet>
    <worksheet name='Random Scatter Charts (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pw5tkg0cvift61b45v6z0yys0m6' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw5tkg0cvift61b45v6z0yys0m6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set 4]' derivation='InOut' name='[io:Sub-Category Set 4:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]' />
              <text column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 4:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[sum:Profit:qk]</rows>
        <cols>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{4962EDD2-56A9-4590-81AC-42F83C2B7E27}' />
    </worksheet>
    <worksheet name='Scatter Charts'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.1pw5tkg0cvift61b45v6z0yys0m6' />
          </datasources>
          <datasource-dependencies datasource='federated.1pw5tkg0cvift61b45v6z0yys0m6'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set 2]' derivation='InOut' name='[io:Sub-Category Set 2:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]' />
              <text column='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 2:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[sum:Profit:qk]</rows>
        <cols>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{DA9C722B-870E-488C-B494-136F623C1D9E}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Bar Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCDFD6CB-B892-496C-B1A7-5A8C271CCCA9}' />
    </window>
    <window class='worksheet' name='Bar Charts (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 3:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 3:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E36EBF3-4DEB-4DF4-9F2E-14C0BDF56260}' />
    </window>
    <window class='worksheet' name='Scatter Charts'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 2:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:City:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78003E03-3D54-411D-AB51-5F8497D1860E}' />
    </window>
    <window class='worksheet' maximized='true' name='Random Scatter Charts (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 2:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:Sub-Category Set 4:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:City:nk]</field>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB3FACA0-6077-4507-95A0-15ED8D8E4B1E}' />
    </window>
    <window class='worksheet' name='Maps'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:State/Province Set:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1pw5tkg0cvift61b45v6z0yys0m6].[io:State/Province Set:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE85393D-5B94-4F4C-B4C0-EEFA9B82B87D}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Bar Charts' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bar Charts (2)' width='192'>
      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
      wvqFKRF6CwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Maps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Random Scatter Charts (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Scatter Charts' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
